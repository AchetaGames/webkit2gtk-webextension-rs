// This file was generated by gir (074a1ca+) from gir-files (???)
// DO NOT EDIT

use DOMCSSStyleSheet;
use DOMObject;
use ffi;
use glib::translate::*;

glib_wrapper! {
    pub struct DOMCSSRule(Object<ffi::WebKitDOMCSSRule>): DOMObject;

    match fn {
        get_type => || ffi::webkit_dom_css_rule_get_type(),
    }
}

impl DOMCSSRule {
    pub fn get_css_text(&self) -> Option<String> {
        unsafe {
            from_glib_full(ffi::webkit_dom_css_rule_get_css_text(self.to_glib_none().0))
        }
    }

    pub fn get_parent_rule(&self) -> Option<DOMCSSRule> {
        unsafe {
            from_glib_full(ffi::webkit_dom_css_rule_get_parent_rule(self.to_glib_none().0))
        }
    }

    pub fn get_parent_style_sheet(&self) -> Option<DOMCSSStyleSheet> {
        unsafe {
            from_glib_full(ffi::webkit_dom_css_rule_get_parent_style_sheet(self.to_glib_none().0))
        }
    }

    //pub fn get_rule_type(&self) -> /*Unimplemented*/Fundamental: UShort {
    //    unsafe { TODO: call ffi::webkit_dom_css_rule_get_rule_type() }
    //}

    //pub fn set_css_text(&self, value: &str, error: /*Ignored*/Option<Error>) {
    //    unsafe { TODO: call ffi::webkit_dom_css_rule_set_css_text() }
    //}
}
