// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// DO NOT EDIT

use DOMElement;
use DOMEventTarget;
use DOMHTMLElement;
use DOMNode;
use DOMObject;
use ffi;
use glib::object::IsA;
use glib::translate::*;
use std::fmt;

glib_wrapper! {
    pub struct DOMHTMLMarqueeElement(Object<ffi::WebKitDOMHTMLMarqueeElement, ffi::WebKitDOMHTMLMarqueeElementClass, DOMHTMLMarqueeElementClass>) @extends DOMHTMLElement, DOMElement, DOMNode, DOMObject, @implements DOMEventTarget;

    match fn {
        get_type => || ffi::webkit_dom_html_marquee_element_get_type(),
    }
}

pub const NONE_DOMHTML_MARQUEE_ELEMENT: Option<&DOMHTMLMarqueeElement> = None;

pub trait DOMHTMLMarqueeElementExt: 'static {
    fn start(&self);

    fn stop(&self);
}

impl<O: IsA<DOMHTMLMarqueeElement>> DOMHTMLMarqueeElementExt for O {
    fn start(&self) {
        unsafe {
            ffi::webkit_dom_html_marquee_element_start(self.as_ref().to_glib_none().0);
        }
    }

    fn stop(&self) {
        unsafe {
            ffi::webkit_dom_html_marquee_element_stop(self.as_ref().to_glib_none().0);
        }
    }
}

impl fmt::Display for DOMHTMLMarqueeElement {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        write!(f, "DOMHTMLMarqueeElement")
    }
}
