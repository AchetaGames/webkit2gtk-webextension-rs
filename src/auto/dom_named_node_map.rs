// This file was generated by gir (074a1ca+) from gir-files (???)
// DO NOT EDIT

use DOMNode;
use DOMObject;
use ffi;
use glib::translate::*;

glib_wrapper! {
    pub struct DOMNamedNodeMap(Object<ffi::WebKitDOMNamedNodeMap>): DOMObject;

    match fn {
        get_type => || ffi::webkit_dom_named_node_map_get_type(),
    }
}

impl DOMNamedNodeMap {
    //pub fn get_length(&self) -> /*Unimplemented*/Fundamental: ULong {
    //    unsafe { TODO: call ffi::webkit_dom_named_node_map_get_length() }
    //}

    pub fn get_named_item(&self, name: &str) -> Option<DOMNode> {
        unsafe {
            from_glib_none(ffi::webkit_dom_named_node_map_get_named_item(self.to_glib_none().0, name.to_glib_none().0))
        }
    }

    pub fn get_named_item_ns(&self, namespaceURI: &str, localName: &str) -> Option<DOMNode> {
        unsafe {
            from_glib_none(ffi::webkit_dom_named_node_map_get_named_item_ns(self.to_glib_none().0, namespaceURI.to_glib_none().0, localName.to_glib_none().0))
        }
    }

    //pub fn item(&self, index: /*Unimplemented*/Fundamental: ULong) -> Option<DOMNode> {
    //    unsafe { TODO: call ffi::webkit_dom_named_node_map_item() }
    //}

    //pub fn remove_named_item(&self, name: &str, error: /*Ignored*/Option<Error>) -> Option<DOMNode> {
    //    unsafe { TODO: call ffi::webkit_dom_named_node_map_remove_named_item() }
    //}

    //pub fn remove_named_item_ns(&self, namespaceURI: &str, localName: &str, error: /*Ignored*/Option<Error>) -> Option<DOMNode> {
    //    unsafe { TODO: call ffi::webkit_dom_named_node_map_remove_named_item_ns() }
    //}

    //pub fn set_named_item<T: IsA<DOMNode>>(&self, node: &T, error: /*Ignored*/Option<Error>) -> Option<DOMNode> {
    //    unsafe { TODO: call ffi::webkit_dom_named_node_map_set_named_item() }
    //}

    //pub fn set_named_item_ns<T: IsA<DOMNode>>(&self, node: &T, error: /*Ignored*/Option<Error>) -> Option<DOMNode> {
    //    unsafe { TODO: call ffi::webkit_dom_named_node_map_set_named_item_ns() }
    //}
}
