// This file was generated by gir (24767f3+) from gir-files (???)
// DO NOT EDIT

use DOMObject;
use Object;
use ffi;
use glib::Value;
use glib::object::IsA;
use glib::translate::*;
use gobject_ffi;

glib_wrapper! {
    pub struct DOMBlob(Object<ffi::WebKitDOMBlob>): DOMObject;

    match fn {
        get_type => || ffi::webkit_dom_blob_get_type(),
    }
}

pub trait DOMBlobExt {
    fn get_size(&self) -> u64;

    fn get_property_type(&self) -> Option<String>;
}

impl<O: IsA<DOMBlob> + IsA<Object>> DOMBlobExt for O {
    fn get_size(&self) -> u64 {
        unsafe {
            ffi::webkit_dom_blob_get_size(self.to_glib_none().0)
        }
    }

    fn get_property_type(&self) -> Option<String> {
        let mut value = Value::from(None::<&str>);
        unsafe {
            gobject_ffi::g_object_get_property(self.to_glib_none().0, "type".to_glib_none().0, value.to_glib_none_mut().0);
        }
        value.get()
    }
}
