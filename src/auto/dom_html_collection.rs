// This file was generated by gir (074a1ca+) from gir-files (???)
// DO NOT EDIT

use DOMNode;
use DOMObject;
use ffi;
use glib::object::IsA;
use glib::translate::*;

glib_wrapper! {
    pub struct DOMHTMLCollection(Object<ffi::WebKitDOMHTMLCollection>): DOMObject;

    match fn {
        get_type => || ffi::webkit_dom_html_collection_get_type(),
    }
}

pub trait DOMHTMLCollectionExt {
    //fn get_length(&self) -> /*Unimplemented*/Fundamental: ULong;

    //fn item(&self, index: /*Unimplemented*/Fundamental: ULong) -> Option<DOMNode>;

    fn named_item(&self, name: &str) -> Option<DOMNode>;
}

impl<O: IsA<DOMHTMLCollection>> DOMHTMLCollectionExt for O {
    //fn get_length(&self) -> /*Unimplemented*/Fundamental: ULong {
    //    unsafe { TODO: call ffi::webkit_dom_html_collection_get_length() }
    //}

    //fn item(&self, index: /*Unimplemented*/Fundamental: ULong) -> Option<DOMNode> {
    //    unsafe { TODO: call ffi::webkit_dom_html_collection_item() }
    //}

    fn named_item(&self, name: &str) -> Option<DOMNode> {
        unsafe {
            from_glib_none(ffi::webkit_dom_html_collection_named_item(self.to_glib_none().0, name.to_glib_none().0))
        }
    }
}
