// This file was generated by gir (074a1ca+) from gir-files (???)
// DO NOT EDIT

use DOMEvent;
use DOMObject;
use DOMUIEvent;
use ffi;
use glib::translate::*;

glib_wrapper! {
    pub struct DOMKeyboardEvent(Object<ffi::WebKitDOMKeyboardEvent>): DOMUIEvent, DOMEvent, DOMObject;

    match fn {
        get_type => || ffi::webkit_dom_keyboard_event_get_type(),
    }
}

impl DOMKeyboardEvent {
    pub fn get_alt_graph_key(&self) -> bool {
        unsafe {
            from_glib(ffi::webkit_dom_keyboard_event_get_alt_graph_key(self.to_glib_none().0))
        }
    }

    pub fn get_alt_key(&self) -> bool {
        unsafe {
            from_glib(ffi::webkit_dom_keyboard_event_get_alt_key(self.to_glib_none().0))
        }
    }

    pub fn get_ctrl_key(&self) -> bool {
        unsafe {
            from_glib(ffi::webkit_dom_keyboard_event_get_ctrl_key(self.to_glib_none().0))
        }
    }

    pub fn get_key_identifier(&self) -> Option<String> {
        unsafe {
            from_glib_full(ffi::webkit_dom_keyboard_event_get_key_identifier(self.to_glib_none().0))
        }
    }

    //pub fn get_key_location(&self) -> /*Unimplemented*/Fundamental: ULong {
    //    unsafe { TODO: call ffi::webkit_dom_keyboard_event_get_key_location() }
    //}

    pub fn get_meta_key(&self) -> bool {
        unsafe {
            from_glib(ffi::webkit_dom_keyboard_event_get_meta_key(self.to_glib_none().0))
        }
    }

    pub fn get_modifier_state(&self, keyIdentifierArg: &str) -> bool {
        unsafe {
            from_glib(ffi::webkit_dom_keyboard_event_get_modifier_state(self.to_glib_none().0, keyIdentifierArg.to_glib_none().0))
        }
    }

    pub fn get_shift_key(&self) -> bool {
        unsafe {
            from_glib(ffi::webkit_dom_keyboard_event_get_shift_key(self.to_glib_none().0))
        }
    }

    //pub fn init_keyboard_event(&self, type_: &str, canBubble: bool, cancelable: bool, view: &DOMDOMWindow, keyIdentifier: &str, location: /*Unimplemented*/Fundamental: ULong, ctrlKey: bool, altKey: bool, shiftKey: bool, metaKey: bool, altGraphKey: bool) {
    //    unsafe { TODO: call ffi::webkit_dom_keyboard_event_init_keyboard_event() }
    //}
}
