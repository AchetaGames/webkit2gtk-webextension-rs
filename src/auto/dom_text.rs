// This file was generated by gir (074a1ca+) from gir-files (???)
// DO NOT EDIT

use DOMCharacterData;
use DOMNode;
use DOMObject;
use ffi;
use glib::object::IsA;
use glib::translate::*;

glib_wrapper! {
    pub struct DOMText(Object<ffi::WebKitDOMText>): DOMCharacterData, DOMNode, DOMObject;

    match fn {
        get_type => || ffi::webkit_dom_text_get_type(),
    }
}

pub trait DOMTextExt {
    fn get_whole_text(&self) -> Option<String>;

    //fn replace_whole_text(&self, content: &str, error: /*Ignored*/Option<Error>) -> Option<DOMText>;

    //fn split_text(&self, offset: u64, error: /*Ignored*/Option<Error>) -> Option<DOMText>;
}

impl<O: IsA<DOMText>> DOMTextExt for O {
    fn get_whole_text(&self) -> Option<String> {
        unsafe {
            from_glib_full(ffi::webkit_dom_text_get_whole_text(self.to_glib_none().0))
        }
    }

    //fn replace_whole_text(&self, content: &str, error: /*Ignored*/Option<Error>) -> Option<DOMText> {
    //    unsafe { TODO: call ffi::webkit_dom_text_replace_whole_text() }
    //}

    //fn split_text(&self, offset: u64, error: /*Ignored*/Option<Error>) -> Option<DOMText> {
    //    unsafe { TODO: call ffi::webkit_dom_text_split_text() }
    //}
}
