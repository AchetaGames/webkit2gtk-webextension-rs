// This file was generated by gir (d9591be+) from gir-files (???)
// DO NOT EDIT

use DOMElement;
use DOMEventTarget;
use DOMHTMLElement;
use DOMNode;
use DOMObject;
use ffi;
use glib::translate::*;

glib_wrapper! {
    pub struct DOMHTMLAreaElement(Object<ffi::WebKitDOMHTMLAreaElement>): DOMHTMLElement, DOMElement, DOMNode, DOMObject, DOMEventTarget;

    match fn {
        get_type => || ffi::webkit_dom_html_area_element_get_type(),
    }
}

impl DOMHTMLAreaElement {
    pub fn get_alt(&self) -> Option<String> {
        unsafe {
            from_glib_full(ffi::webkit_dom_html_area_element_get_alt(self.to_glib_none().0))
        }
    }

    pub fn get_coords(&self) -> Option<String> {
        unsafe {
            from_glib_full(ffi::webkit_dom_html_area_element_get_coords(self.to_glib_none().0))
        }
    }

    pub fn get_hash(&self) -> Option<String> {
        unsafe {
            from_glib_full(ffi::webkit_dom_html_area_element_get_hash(self.to_glib_none().0))
        }
    }

    pub fn get_host(&self) -> Option<String> {
        unsafe {
            from_glib_full(ffi::webkit_dom_html_area_element_get_host(self.to_glib_none().0))
        }
    }

    pub fn get_hostname(&self) -> Option<String> {
        unsafe {
            from_glib_full(ffi::webkit_dom_html_area_element_get_hostname(self.to_glib_none().0))
        }
    }

    pub fn get_href(&self) -> Option<String> {
        unsafe {
            from_glib_full(ffi::webkit_dom_html_area_element_get_href(self.to_glib_none().0))
        }
    }

    pub fn get_no_href(&self) -> bool {
        unsafe {
            from_glib(ffi::webkit_dom_html_area_element_get_no_href(self.to_glib_none().0))
        }
    }

    pub fn get_pathname(&self) -> Option<String> {
        unsafe {
            from_glib_full(ffi::webkit_dom_html_area_element_get_pathname(self.to_glib_none().0))
        }
    }

    pub fn get_port(&self) -> Option<String> {
        unsafe {
            from_glib_full(ffi::webkit_dom_html_area_element_get_port(self.to_glib_none().0))
        }
    }

    pub fn get_protocol(&self) -> Option<String> {
        unsafe {
            from_glib_full(ffi::webkit_dom_html_area_element_get_protocol(self.to_glib_none().0))
        }
    }

    pub fn get_search(&self) -> Option<String> {
        unsafe {
            from_glib_full(ffi::webkit_dom_html_area_element_get_search(self.to_glib_none().0))
        }
    }

    pub fn get_shape(&self) -> Option<String> {
        unsafe {
            from_glib_full(ffi::webkit_dom_html_area_element_get_shape(self.to_glib_none().0))
        }
    }

    pub fn get_target(&self) -> Option<String> {
        unsafe {
            from_glib_full(ffi::webkit_dom_html_area_element_get_target(self.to_glib_none().0))
        }
    }

    pub fn set_alt(&self, value: &str) {
        unsafe {
            ffi::webkit_dom_html_area_element_set_alt(self.to_glib_none().0, value.to_glib_none().0);
        }
    }

    pub fn set_coords(&self, value: &str) {
        unsafe {
            ffi::webkit_dom_html_area_element_set_coords(self.to_glib_none().0, value.to_glib_none().0);
        }
    }

    pub fn set_href(&self, value: &str) {
        unsafe {
            ffi::webkit_dom_html_area_element_set_href(self.to_glib_none().0, value.to_glib_none().0);
        }
    }

    pub fn set_no_href(&self, value: bool) {
        unsafe {
            ffi::webkit_dom_html_area_element_set_no_href(self.to_glib_none().0, value.to_glib());
        }
    }

    pub fn set_shape(&self, value: &str) {
        unsafe {
            ffi::webkit_dom_html_area_element_set_shape(self.to_glib_none().0, value.to_glib_none().0);
        }
    }

    pub fn set_target(&self, value: &str) {
        unsafe {
            ffi::webkit_dom_html_area_element_set_target(self.to_glib_none().0, value.to_glib_none().0);
        }
    }
}
