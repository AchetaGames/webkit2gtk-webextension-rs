// This file was generated by gir (074a1ca+) from gir-files (???)
// DO NOT EDIT

use DOMNode;
use DOMObject;
use ffi;
use glib::translate::*;

glib_wrapper! {
    pub struct DOMNodeIterator(Object<ffi::WebKitDOMNodeIterator>): DOMObject;

    match fn {
        get_type => || ffi::webkit_dom_node_iterator_get_type(),
    }
}

impl DOMNodeIterator {
    pub fn detach(&self) {
        unsafe {
            ffi::webkit_dom_node_iterator_detach(self.to_glib_none().0);
        }
    }

    pub fn get_expand_entity_references(&self) -> bool {
        unsafe {
            from_glib(ffi::webkit_dom_node_iterator_get_expand_entity_references(self.to_glib_none().0))
        }
    }

    //pub fn get_filter(&self) -> /*Ignored*/Option<DOMNodeFilter> {
    //    unsafe { TODO: call ffi::webkit_dom_node_iterator_get_filter() }
    //}

    pub fn get_pointer_before_reference_node(&self) -> bool {
        unsafe {
            from_glib(ffi::webkit_dom_node_iterator_get_pointer_before_reference_node(self.to_glib_none().0))
        }
    }

    pub fn get_reference_node(&self) -> Option<DOMNode> {
        unsafe {
            from_glib_none(ffi::webkit_dom_node_iterator_get_reference_node(self.to_glib_none().0))
        }
    }

    pub fn get_root(&self) -> Option<DOMNode> {
        unsafe {
            from_glib_none(ffi::webkit_dom_node_iterator_get_root(self.to_glib_none().0))
        }
    }

    //pub fn get_what_to_show(&self) -> /*Unimplemented*/Fundamental: ULong {
    //    unsafe { TODO: call ffi::webkit_dom_node_iterator_get_what_to_show() }
    //}

    //pub fn next_node(&self, error: /*Ignored*/Option<Error>) -> Option<DOMNode> {
    //    unsafe { TODO: call ffi::webkit_dom_node_iterator_next_node() }
    //}

    //pub fn previous_node(&self, error: /*Ignored*/Option<Error>) -> Option<DOMNode> {
    //    unsafe { TODO: call ffi::webkit_dom_node_iterator_previous_node() }
    //}
}
