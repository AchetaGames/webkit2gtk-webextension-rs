// This file was generated by gir (074a1ca+) from gir-files (???)
// DO NOT EDIT

use DOMNode;
use DOMObject;
use ffi;
use glib::object::IsA;
use glib::translate::*;

glib_wrapper! {
    pub struct DOMCharacterData(Object<ffi::WebKitDOMCharacterData>): DOMNode, DOMObject;

    match fn {
        get_type => || ffi::webkit_dom_character_data_get_type(),
    }
}

pub trait DOMCharacterDataExt {
    //fn append_data(&self, data: &str, error: /*Ignored*/Option<Error>);

    //fn delete_data(&self, offset: /*Unimplemented*/Fundamental: ULong, length: /*Unimplemented*/Fundamental: ULong, error: /*Ignored*/Option<Error>);

    fn get_data(&self) -> Option<String>;

    //fn get_length(&self) -> /*Unimplemented*/Fundamental: ULong;

    //fn insert_data(&self, offset: /*Unimplemented*/Fundamental: ULong, data: &str, error: /*Ignored*/Option<Error>);

    //fn replace_data(&self, offset: /*Unimplemented*/Fundamental: ULong, length: /*Unimplemented*/Fundamental: ULong, data: &str, error: /*Ignored*/Option<Error>);

    //fn set_data(&self, value: &str, error: /*Ignored*/Option<Error>);

    //fn substring_data(&self, offset: /*Unimplemented*/Fundamental: ULong, length: /*Unimplemented*/Fundamental: ULong, error: /*Ignored*/Option<Error>) -> Option<String>;
}

impl<O: IsA<DOMCharacterData>> DOMCharacterDataExt for O {
    //fn append_data(&self, data: &str, error: /*Ignored*/Option<Error>) {
    //    unsafe { TODO: call ffi::webkit_dom_character_data_append_data() }
    //}

    //fn delete_data(&self, offset: /*Unimplemented*/Fundamental: ULong, length: /*Unimplemented*/Fundamental: ULong, error: /*Ignored*/Option<Error>) {
    //    unsafe { TODO: call ffi::webkit_dom_character_data_delete_data() }
    //}

    fn get_data(&self) -> Option<String> {
        unsafe {
            from_glib_full(ffi::webkit_dom_character_data_get_data(self.to_glib_none().0))
        }
    }

    //fn get_length(&self) -> /*Unimplemented*/Fundamental: ULong {
    //    unsafe { TODO: call ffi::webkit_dom_character_data_get_length() }
    //}

    //fn insert_data(&self, offset: /*Unimplemented*/Fundamental: ULong, data: &str, error: /*Ignored*/Option<Error>) {
    //    unsafe { TODO: call ffi::webkit_dom_character_data_insert_data() }
    //}

    //fn replace_data(&self, offset: /*Unimplemented*/Fundamental: ULong, length: /*Unimplemented*/Fundamental: ULong, data: &str, error: /*Ignored*/Option<Error>) {
    //    unsafe { TODO: call ffi::webkit_dom_character_data_replace_data() }
    //}

    //fn set_data(&self, value: &str, error: /*Ignored*/Option<Error>) {
    //    unsafe { TODO: call ffi::webkit_dom_character_data_set_data() }
    //}

    //fn substring_data(&self, offset: /*Unimplemented*/Fundamental: ULong, length: /*Unimplemented*/Fundamental: ULong, error: /*Ignored*/Option<Error>) -> Option<String> {
    //    unsafe { TODO: call ffi::webkit_dom_character_data_substring_data() }
    //}
}
